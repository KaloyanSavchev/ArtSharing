@model ArtSharing.Web.Models.ProfileViewModel

@{
    ViewData["Title"] = $"{Model.UserName}'s Profile";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-3 text-center">
            <img src="@Model.ProfilePicture" alt="Profile Picture"
                 class="img-fluid rounded-circle mb-3"
                 style="width: 150px; height: 150px; object-fit: cover;" />
        </div>

        <div class="col-md-9">
            <h2>
                @Model.UserName
                @if (Model.IsBanned)
                {
                    <span class="badge bg-danger ms-2">BANNED</span>
                }
            </h2>

            <p><strong>Email:</strong> @Model.Email</p>
            <p><strong>Phone:</strong> @(string.IsNullOrWhiteSpace(Model.PhoneNumber) ? "Not provided" : Model.PhoneNumber)</p>
            <p><strong>Member since:</strong> @Model.DateRegistered.ToShortDateString()</p>

            @if (!string.IsNullOrWhiteSpace(Model.ProfileDescription))
            {
                <p><strong>About:</strong> @Model.ProfileDescription</p>
            }

            <div class="mb-3">
                <span id="followersCount"><strong>@Model.FollowersCount</strong></span> follower@(Model.FollowersCount == 1 ? "" : "s") |
                <span id="followingCount"><strong>@Model.FollowingCount</strong></span> following
            </div>

            @if (!Model.IsOwnProfile)
            {
                <form method="post" id="followForm" data-username="@Model.UserName">
                    <button type="submit" id="followBtn"
                            class="btn @(Model.IsFollowing ? "btn-danger" : "btn-primary")">
                        @(Model.IsFollowing ? "Unfollow" : "Follow")
                    </button>
                </form>

                <a asp-controller="Report" asp-action="UserProfile" asp-route-id="@Model.UserId"
                   class="btn btn-outline-danger mt-2">Report User</a>
            }
            else
            {
                <a asp-action="Edit" class="btn btn-outline-secondary">Edit Profile</a>
            }
        </div>
    </div>

    <div id="userPostsSection" class="mt-5">
        @if (Model.UserPosts != null && Model.UserPosts.Any() && (Model.IsOwnProfile || Model.IsFollowing))
        {
            <hr class="my-4" />
            <h4 class="mb-3">🖼 Posts by @Model.UserName</h4>
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var post in Model.UserPosts)
                {
                    <div class="col">
                        @await Html.PartialAsync("_PostCardPartial", post)
                    </div>
                }
            </div>
        }
        else if (!Model.IsOwnProfile && !Model.IsFollowing)
        {
            <p class="text-muted mt-4">You need to follow this user to see their posts.</p>
        }
        else
        {
            <p class="text-muted mt-4">This user hasn’t uploaded any posts yet.</p>
        }
    </div>
</div>

@section Scripts {
    <script>
        function applyImageCardStyles() {
            document.querySelectorAll('.image-blur-bg').forEach(el => {
                const bg = el.getAttribute('data-bg');
                if (bg) {
                    el.style.backgroundImage = `url('${bg}')`;
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            const followForm = document.getElementById("followForm");
            const followBtn = document.getElementById("followBtn");

            if (followForm && followBtn) {
                followForm.addEventListener("submit", async function (e) {
                    e.preventDefault();
                    const username = followForm.dataset.username;

                    const response = await fetch(`/Profile/ToggleFollow?username=${username}`, {
                        method: "POST",
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();

                        followBtn.textContent = data.isFollowing ? "Unfollow" : "Follow";
                        followBtn.className = "btn " + (data.isFollowing ? "btn-danger" : "btn-primary");

                        document.getElementById("followersCount").innerHTML = `<strong>${data.followersCount}</strong>`;
                        document.getElementById("followingCount").innerHTML = `<strong>${data.followingCount}</strong>`;

                        const postsSection = document.getElementById("userPostsSection");

                        if (data.isFollowing) {
                            const postsResponse = await fetch(`/Profile/GetUserPostsPartial?username=${username}`);
                            const html = await postsResponse.text();
                            postsSection.innerHTML = html;
                            applyImageCardStyles();
                        } else {
                            postsSection.innerHTML = `<p class="text-muted mt-4">You need to follow this user to see their posts.</p>`;
                        }
                    }
                });
            }
        });
    </script>
}