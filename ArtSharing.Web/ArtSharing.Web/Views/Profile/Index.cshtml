@using ArtSharing.Web.Helpers
@model ArtSharing.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "My Profile";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-3 text-center">
            <img src="@Model.ProfilePicture"
                 class="img-thumbnail rounded-circle mb-3"
                 alt="Profile Picture"
                 style="width: 150px; height: 150px; object-fit: cover;" />
        </div>

        <div class="col-md-9">
            <h2>@ContentFilter.CensorText(Model.UserName)</h2>
            <p><strong>Email:</strong> @Model.Email</p>
            <p><strong>Phone:</strong> @(string.IsNullOrWhiteSpace(Model.PhoneNumber) ? "Not provided" : Model.PhoneNumber)</p>
            @if (!string.IsNullOrWhiteSpace(Model.ProfileDescription))
            {
                <p><strong>About:</strong> @ContentFilter.CensorText(Model.ProfileDescription)</p>
            }
            <p><strong>Member since:</strong> @Model.DateRegistered.ToShortDateString()</p>

            <p>
                <a href="javascript:void(0);" id="followersLink" class="me-2">
                    <strong>@Model.FollowersCount</strong> follower@(Model.FollowersCount == 1 ? "" : "s")
                </a>
                |
                <a href="javascript:void(0);" id="followingLink" class="ms-2">
                    <strong>@Model.FollowingCount</strong> following
                </a>
            </p>

            <a asp-action="Edit" class="btn btn-outline-secondary">Edit Profile</a>
        </div>
    </div>

    <hr class="my-4" />

    <!-- Toggle Buttons -->
    <div class="mb-4 text-center">
        <button class="btn @(Model.SelectedTab == "MyPosts" ? "btn-dark" : "btn-outline-dark") me-2" data-tab="MyPosts" id="myPostsBtn">My Posts</button>
        <button class="btn @(Model.SelectedTab == "LikedPosts" ? "btn-dark" : "btn-outline-dark")" data-tab="LikedPosts" id="likedPostsBtn">Liked Posts</button>
    </div>

    <!-- Posts Container -->
    <div id="postsContainer">
        @if (Model.SelectedTab == "MyPosts")
        {
            <h4 class="mb-3">🖼 My Posts</h4>
            @if (Model.UserPosts.Any())
            {
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var post in Model.UserPosts)
                    {
                        @await Html.PartialAsync("_PostCardPartial", post)
                    }
                </div>
            }
            else
            {
                <p class="text-muted">You haven’t uploaded any posts yet.</p>
            }
        }
        else if (Model.SelectedTab == "LikedPosts")
        {
            <h4 class="mb-3">❤️ Liked Posts</h4>
            @if (Model.LikedPosts.Any())
            {
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var post in Model.LikedPosts)
                    {
                        @await Html.PartialAsync("_PostCardPartial", post)
                    }
                </div>
            }
            else
            {
                <p class="text-muted">You haven’t liked any posts yet.</p>
            }
        }
    </div>
</div>

<!-- Overlay за Followers/Following -->
<div id="overlay" class="overlay" style="display: none;">
    <div class="overlay-content">
        <button id="closeOverlay" class="btn-close float-end"></button>
        <h5 id="overlayTitle">Followers</h5>
        <input type="text" id="searchInput" class="form-control my-2" placeholder="Search by username..." />
        <div id="userList" class="list-group overflow-auto" style="max-height: 400px;"></div>
        <p id="noUsersMessage" class="text-muted text-center mt-2" style="display: none;">No users found.</p>
    </div>
</div>

@section Scripts {
    <script>
        // Followers / Following overlay
        const overlay = document.getElementById('overlay');
        const userList = document.getElementById('userList');
        const searchInput = document.getElementById('searchInput');
        const overlayTitle = document.getElementById('overlayTitle');
        const noUsersMessage = document.getElementById('noUsersMessage');

        document.getElementById('followersLink')?.addEventListener('click', function (e) {
            e.preventDefault();
            fetchUsers('followers');
        });

        document.getElementById('followingLink')?.addEventListener('click', function (e) {
            e.preventDefault();
            fetchUsers('following');
        });

        document.getElementById('closeOverlay')?.addEventListener('click', () => {
            overlay.style.display = 'none';
        });

        async function fetchUsers(type) {
            const res = await fetch(`/Profile/GetFollowList?type=${type}`);
            const users = await res.json();

            overlayTitle.textContent = type === 'followers' ? 'Followers' : 'Following';
            userList.innerHTML = '';
            noUsersMessage.style.display = 'none';
            searchInput.value = '';

            users.forEach(user => {
                const item = document.createElement('a');
                item.className = 'list-group-item list-group-item-action';
                item.href = `/Profile/About?username=${user.userName}`;
                item.innerHTML = `<img src="${user.profilePicture}" class="rounded me-2" style="width: 30px; height: 30px; object-fit: cover;"> ${user.userName}`;
                userList.appendChild(item);
            });

            overlay.style.display = 'block';

            searchInput.oninput = function () {
                const query = this.value.toLowerCase();
                let visibleCount = 0;

                document.querySelectorAll('#userList .list-group-item').forEach(item => {
                    const name = item.textContent.toLowerCase();
                    const isMatch = name.includes(query);
                    item.style.display = isMatch ? '' : 'none';
                    if (isMatch) visibleCount++;
                });

                noUsersMessage.style.display = visibleCount === 0 ? 'block' : 'none';
            };
        }

        document.getElementById('myPostsBtn')?.addEventListener('click', function () {
            loadTab('MyPosts');
        });

        document.getElementById('likedPostsBtn')?.addEventListener('click', function () {
            loadTab('LikedPosts');
        });

        async function loadTab(tab) {
            const response = await fetch(`/Profile/LoadTab?tab=${tab}`);
            const html = await response.text();
            document.getElementById('postsContainer').innerHTML = html;

            // Update buttons styling
            document.getElementById('myPostsBtn').className = "btn btn-outline-dark me-2";
            document.getElementById('likedPostsBtn').className = "btn btn-outline-dark";

            if (tab === "MyPosts") {
                document.getElementById('myPostsBtn').className = "btn btn-dark me-2";
            } else {
                document.getElementById('likedPostsBtn').className = "btn btn-dark";
            }
        }
    </script>
}
