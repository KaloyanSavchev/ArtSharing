@model ArtSharing.Web.Models.ProfileViewModel

@{
    ViewData["Title"] = "My Profile";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-3 text-center">
            <img src="@Model.ProfilePicture"
                 class="img-thumbnail rounded-circle mb-3"
                 alt="Profile Picture"
                 style="width: 150px; height: 150px; object-fit: cover;" />
        </div>

        <div class="col-md-9">
            <h2>@Model.UserName</h2>
            <p><strong>Email:</strong> @Model.Email</p>
            <p><strong>Phone:</strong> @(string.IsNullOrWhiteSpace(Model.PhoneNumber) ? "Not provided" : Model.PhoneNumber)</p>
            @if (!string.IsNullOrWhiteSpace(Model.ProfileDescription))
            {
                <p><strong>Description:</strong> @Model.ProfileDescription</p>
            }
            <p><strong>Member since:</strong> @Model.DateRegistered.ToShortDateString()</p>

            <p>
                <a href="javascript:void(0);" id="followersLink" class="me-2">
                    <strong>@Model.FollowersCount</strong> follower@(Model.FollowersCount == 1 ? "" : "s")
                </a>
                |
                <a href="javascript:void(0);" id="followingLink" class="ms-2">
                    <strong>@Model.FollowingCount</strong> following
                </a>
            </p>

            <a asp-action="Edit" class="btn btn-outline-secondary">Edit Profile</a>
        </div>
    </div>

    <hr class="my-4" />

    <!-- Toggle Buttons -->
    <div class="mb-4 text-center">
        <a asp-action="Index" asp-route-tab="MyPosts"
           class="btn @(Model.SelectedTab == "MyPosts" ? "btn-dark" : "btn-outline-dark") me-2">My Posts</a>

        <a asp-action="Index" asp-route-tab="LikedPosts"
           class="btn @(Model.SelectedTab == "LikedPosts" ? "btn-dark" : "btn-outline-dark")">Liked Posts</a>
    </div>

    <!-- Gallery -->
    @if (Model.SelectedTab == "MyPosts")
    {
        <h4 class="mb-3">🖼 My Posts</h4>

        @if (Model.UserPosts.Any())
        {
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var post in Model.UserPosts)
                {
                    <div class="col">
                        <div class="card h-100">
                            <img src="@post.ImagePath" class="card-img-top" style="max-height: 200px; object-fit: cover;" />
                            <div class="card-body">
                                <h5 class="card-title">@post.Title</h5>
                                <p class="card-text text-muted">@post.Category?.Name</p>
                                <a asp-controller="Post" asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-primary">View</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">You haven’t uploaded any posts yet.</p>
        }
    }
    else if (Model.SelectedTab == "LikedPosts")
    {
        <h4 class="mb-3">❤️ Liked Posts</h4>

        @if (Model.LikedPosts.Any())
        {
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var post in Model.LikedPosts)
                {
                    <div class="col">
                        <div class="card h-100">
                            <img src="@post.ImagePath" class="card-img-top" style="max-height: 200px; object-fit: cover;" />
                            <div class="card-body">
                                <h5 class="card-title">@post.Title</h5>
                                <p class="card-text text-muted">By @post.User.UserName • @post.Category?.Name</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <a asp-controller="Post" asp-action="Details" asp-route-id="@post.Id" class="btn btn-sm btn-outline-primary">View</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">You haven’t liked any posts yet.</p>
        }
    }
</div>

<!-- Overlay за Followers/Following -->
<div id="overlay" class="overlay" style="display: none;">
    <div class="overlay-content text-start">
        <button id="closeOverlay" class="btn-close float-end" aria-label="Close"></button>
        <h5 id="overlayTitle" class="mb-3">Followers</h5>
        <input type="text" id="searchInput" class="form-control mb-3" placeholder="Search by username..." />
        <div id="userList" class="list-group overflow-auto" style="max-height: 400px;"></div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/like-toggle.js" asp-append-version="true"></script>

    <script>
        const overlay = document.getElementById('overlay');
        const userList = document.getElementById('userList');
        const searchInput = document.getElementById('searchInput');
        const overlayTitle = document.getElementById('overlayTitle');

        document.getElementById('followersLink')?.addEventListener('click', function (e) {
            e.preventDefault();
            fetchUsers('followers');
        });

        document.getElementById('followingLink')?.addEventListener('click', function (e) {
            e.preventDefault();
            fetchUsers('following');
        });

        document.getElementById('closeOverlay')?.addEventListener('click', () => {
            overlay.style.display = 'none';
        });

        searchInput?.addEventListener('input', function () {
            const query = this.value.toLowerCase();
            document.querySelectorAll('#userList .list-group-item').forEach(item => {
                const name = item.textContent.toLowerCase();
                item.style.display = name.includes(query) ? '' : 'none';
            });
        });

        async function fetchUsers(type) {
            try {
                const res = await fetch(`/Profile/GetFollowList?type=${type}`);
                const users = await res.json();

                overlayTitle.textContent = type === 'followers' ? 'Followers' : 'Following';
                userList.innerHTML = '';

                users.forEach(user => {
                    const item = document.createElement('a');
                    item.className = 'list-group-item list-group-item-action d-flex align-items-center';
                    item.href = `/Profile/About?username=${user.userName}`;
                    item.innerHTML = `<img src="${user.profilePicture}" class="rounded me-2" style="width: 30px; height: 30px; object-fit: cover;"> ${user.userName}`;
                    userList.appendChild(item);
                });

                overlay.style.display = 'flex';
            } catch (error) {
                console.error("Error fetching users:", error);
            }
        }
    </script>
}
