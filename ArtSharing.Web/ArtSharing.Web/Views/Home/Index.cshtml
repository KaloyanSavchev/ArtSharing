@model List<ArtSharing.Data.Models.Models.Post>
@using ArtSharing.Data.Models.Models

@{
    ViewData["Title"] = "Home";
}

<h1 class="text-center my-4">🖼️ Art Feed</h1>

<div class="container">
    <!-- Filter Controls -->
    <div class="row mb-4">
        <div class="col-md-6">
            <input type="text" id="searchInput" class="form-control" placeholder="Search by title or description..." />
        </div>
        <div class="col-md-4">
            <select id="categoryFilter" class="form-select">
                <option value="">All Categories</option>
                @foreach (var category in ViewBag.Categories as List<Category>)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </select>
        </div>
    </div>

    <!-- Posts Section -->
    <div id="postContainer" class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var post in Model.Take(6))
        {
            <partial name="_PostCardPartial" model="post" />
        }
    </div>

    <div class="text-center mt-4">
        <span id="loadingSpinner" class="spinner-border text-primary" style="display: none;"></span>
    </div>
</div>

@section Scripts {
    <script>
        let loadedCount = 6;
        let isLoading = false;
        let allPostsLoaded = false;

        const postContainer = document.getElementById("postContainer");
        const loadingSpinner = document.getElementById("loadingSpinner");
        const searchInput = document.getElementById("searchInput");
        const categoryFilter = document.getElementById("categoryFilter");

        async function loadMorePosts() {
            if (isLoading || allPostsLoaded) return;
            isLoading = true;
            loadingSpinner.style.display = "inline-block";

            const response = await fetch(`/Home/LoadMorePosts?skip=${loadedCount}`);
            const html = await response.text();

            if (html.trim()) {
                postContainer.insertAdjacentHTML("beforeend", html);
                loadedCount += 6;
            } else {
                allPostsLoaded = true;
                window.removeEventListener("scroll", scrollHandler);
            }

            loadingSpinner.style.display = "none";
            isLoading = false;
        }

        function scrollHandler() {
            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 300) {
                loadMorePosts();
            }
        }

        async function filterPosts() {
            const search = searchInput.value.trim();
            const categoryId = categoryFilter.value;

            const url = `/Home/FilterPosts?searchTerm=${encodeURIComponent(search)}&categoryId=${categoryId}`;
            const response = await fetch(url);
            const html = await response.text();

            postContainer.innerHTML = html;
            allPostsLoaded = true;
            window.removeEventListener("scroll", scrollHandler);
        }

        // Attach listeners
        window.addEventListener("scroll", scrollHandler);
        searchInput.addEventListener("input", debounce(filterPosts, 300));
        categoryFilter.addEventListener("change", filterPosts);

        function debounce(func, delay) {
            let timeout;
            return function () {
                clearTimeout(timeout);
                timeout = setTimeout(func, delay);
            };
        }
    </script>
}
